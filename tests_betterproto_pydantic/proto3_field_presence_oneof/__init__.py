# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: proto3_field_presence_oneof.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "InnerNested",
    "Nested",
    "Test",
    "WithOptional",
)


import betterproto2
from pydantic import model_validator
from pydantic.dataclasses import dataclass

from ..message_pool import default_message_pool

betterproto2.check_compiler_version("0.5.1")


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class InnerNested(betterproto2.Message):
    a: "bool | None" = betterproto2.field(1, betterproto2.TYPE_BOOL, optional=True)


default_message_pool.register_message("proto3_field_presence_oneof", "InnerNested", InnerNested)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class Nested(betterproto2.Message):
    inner: "InnerNested | None" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, optional=True)


default_message_pool.register_message("proto3_field_presence_oneof", "Nested", Nested)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class Test(betterproto2.Message):
    """


    Oneofs:
        - kind:
    """

    nested: "Nested | None" = betterproto2.field(1, betterproto2.TYPE_MESSAGE, optional=True, group="kind")

    with_optional: "WithOptional | None" = betterproto2.field(2, betterproto2.TYPE_MESSAGE, optional=True, group="kind")

    @model_validator(mode="after")
    def check_oneof(cls, values):
        return cls._validate_field_groups(values)


default_message_pool.register_message("proto3_field_presence_oneof", "Test", Test)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class WithOptional(betterproto2.Message):
    b: "bool | None" = betterproto2.field(2, betterproto2.TYPE_BOOL, optional=True)


default_message_pool.register_message("proto3_field_presence_oneof", "WithOptional", WithOptional)
