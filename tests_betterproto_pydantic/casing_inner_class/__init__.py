# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: casing_inner_class.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "Test",
    "TestInnerClass",
)

import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from ..message_pool import default_message_pool

betterproto2.check_compiler_version("0.5.1")


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class Test(betterproto2.Message):
    inner: "TestInnerClass | None" = betterproto2.field(2, betterproto2.TYPE_MESSAGE, optional=True)


default_message_pool.register_message("casing_inner_class", "Test", Test)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class TestInnerClass(betterproto2.Message):
    old_exp: "typing.Annotated[int, pydantic.Field(ge=-2**31, le=2**31 - 1)]" = betterproto2.field(
        1, betterproto2.TYPE_SINT32
    )


default_message_pool.register_message("casing_inner_class", "Test.inner_class", TestInnerClass)
