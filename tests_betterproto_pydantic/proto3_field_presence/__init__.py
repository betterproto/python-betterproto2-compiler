# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: proto3_field_presence.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("InnerTest", "Test", "TestEnum")

import datetime
import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from ..message_pool import default_message_pool

betterproto2.check_compiler_version("0.5.1")


class TestEnum(betterproto2.Enum):
    A = 0

    B = 1

    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        from pydantic_core import core_schema

        return core_schema.int_schema(ge=0)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class InnerTest(betterproto2.Message):
    test: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = (
        betterproto2.field(1, betterproto2.TYPE_STRING)
    )


default_message_pool.register_message("proto3_field_presence", "InnerTest", InnerTest)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class Test(betterproto2.Message):
    test1: "typing.Annotated[int, pydantic.Field(ge=0, le=2**32 - 1)] | None" = betterproto2.field(
        1, betterproto2.TYPE_UINT32, optional=True
    )

    test2: "bool | None" = betterproto2.field(2, betterproto2.TYPE_BOOL, optional=True)

    test3: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)] | None" = (
        betterproto2.field(3, betterproto2.TYPE_STRING, optional=True)
    )

    test4: "bytes | None" = betterproto2.field(4, betterproto2.TYPE_BYTES, optional=True)

    test5: "InnerTest | None" = betterproto2.field(5, betterproto2.TYPE_MESSAGE, optional=True)

    test6: "TestEnum | None" = betterproto2.field(6, betterproto2.TYPE_ENUM, optional=True)

    test7: "typing.Annotated[int, pydantic.Field(ge=0, le=2**64 - 1)] | None" = betterproto2.field(
        7, betterproto2.TYPE_UINT64, optional=True
    )

    test8: "typing.Annotated[float, pydantic.AfterValidator(betterproto2.validators.validate_float32)] | None" = (
        betterproto2.field(8, betterproto2.TYPE_FLOAT, optional=True)
    )

    test9: "datetime.datetime | None" = betterproto2.field(
        9, betterproto2.TYPE_MESSAGE, unwrap=lambda: _google__protobuf__.Timestamp, optional=True
    )


default_message_pool.register_message("proto3_field_presence", "Test", Test)


from ..google import protobuf as _google__protobuf__
