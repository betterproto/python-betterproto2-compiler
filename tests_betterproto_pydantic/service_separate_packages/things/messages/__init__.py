# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: messages.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "DoThingRequest",
    "DoThingResponse",
    "GetThingRequest",
    "GetThingResponse",
)

import datetime
import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from ....message_pool import default_message_pool

betterproto2.check_compiler_version("0.5.1")


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class DoThingRequest(betterproto2.Message):
    name: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = (
        betterproto2.field(1, betterproto2.TYPE_STRING)
    )

    comments: "list[typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]]" = (
        betterproto2.field(2, betterproto2.TYPE_STRING, repeated=True)
    )
    """
    use `repeated` so we can check if `List` is correctly imported
    """

    when: "datetime.datetime | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, unwrap=lambda: ___google__protobuf__.Timestamp, optional=True
    )
    """
    use google types `timestamp` and `duration` so we can check
    if everything from `datetime` is correctly imported
    """

    duration: "datetime.timedelta | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, unwrap=lambda: ___google__protobuf__.Duration, optional=True
    )


default_message_pool.register_message("service_separate_packages.things.messages", "DoThingRequest", DoThingRequest)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class DoThingResponse(betterproto2.Message):
    names: "list[typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]]" = (
        betterproto2.field(1, betterproto2.TYPE_STRING, repeated=True)
    )


default_message_pool.register_message("service_separate_packages.things.messages", "DoThingResponse", DoThingResponse)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class GetThingRequest(betterproto2.Message):
    name: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = (
        betterproto2.field(1, betterproto2.TYPE_STRING)
    )


default_message_pool.register_message("service_separate_packages.things.messages", "GetThingRequest", GetThingRequest)


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class GetThingResponse(betterproto2.Message):
    name: "typing.Annotated[str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = (
        betterproto2.field(1, betterproto2.TYPE_STRING)
    )

    version: "typing.Annotated[int, pydantic.Field(ge=-2**31, le=2**31 - 1)]" = betterproto2.field(
        2, betterproto2.TYPE_INT32
    )


default_message_pool.register_message("service_separate_packages.things.messages", "GetThingResponse", GetThingResponse)


from ....google import protobuf as ___google__protobuf__
