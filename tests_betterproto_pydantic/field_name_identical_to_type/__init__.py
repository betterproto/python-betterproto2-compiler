# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: field_name_identical_to_type.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("Test",)

import builtins
import typing

import betterproto2
import pydantic
from pydantic.dataclasses import dataclass

from ..message_pool import default_message_pool

betterproto2.check_compiler_version("0.5.1")


@dataclass(eq=False, repr=False, config={"extra": "forbid"})
class Test(betterproto2.Message):
    """
    Tests that messages may contain fields with names that are identical to their python types (PR #294)
    """

    int: "typing.Annotated[builtins.int, pydantic.Field(ge=-2**31, le=2**31 - 1)]" = betterproto2.field(
        1, betterproto2.TYPE_INT32
    )

    float: "typing.Annotated[builtins.float, pydantic.AfterValidator(betterproto2.validators.validate_float32)]" = (
        betterproto2.field(2, betterproto2.TYPE_FLOAT)
    )

    str: "typing.Annotated[builtins.str, pydantic.AfterValidator(betterproto2.validators.validate_string)]" = (
        betterproto2.field(3, betterproto2.TYPE_STRING)
    )

    bytes: "builtins.bytes" = betterproto2.field(4, betterproto2.TYPE_BYTES)

    bool: "builtins.bool" = betterproto2.field(5, betterproto2.TYPE_BOOL)


default_message_pool.register_message("field_name_identical_to_type", "Test", Test)
